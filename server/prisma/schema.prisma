generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url      = env("DATABASE_URL")
}

model Role {
  role_id       String      @id @default(uuid())
  role_name     String?     @db.String(30)
  created_at    DateTime    @default(now())
  updated_at    DateTime    @updatedAt
  active_status Boolean     @default(true)
  role_code     Int?        @unique
  label         String?     @db.String(8)
  RoleRoute     RoleRoute[]
  User          User[]
}

model Route {
  route_id   String      @id @default(uuid())
  route_name String      @db.String(30)
  path_route String?     @db.String(100)
  parent_id  String?
  order_path Int
  path_key   String
  created_at DateTime    @default(now())
  updated_at DateTime    @updatedAt
  path_side  String?     @db.String(100)
  RoleRoute  RoleRoute[]
  parent     Route?      @relation("RouteChildren", fields: [parent_id], references: [route_id])
  children   Route[]     @relation("RouteChildren")
}

model RoleRoute {
  role_route_id String   @id @default(uuid())
  role_id       String
  route_id      String
  created_at    DateTime @default(now())
  updated_at    DateTime @updatedAt
  role          Role     @relation(fields: [role_id], references: [role_id], map: "FK_role_route_role_id")
  route         Route    @relation(fields: [route_id], references: [route_id], map: "FK_role_route_route_id")
}

model User {
  user_id      String      @id @default(uuid())
  user_name    String      @unique @db.String(10)
  full_name    String?     @db.String(30)
  password     String
  description  String?
  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  special_code String
  login_at     DateTime    @default(now())
  role_code    Int?        @default(3)
  place        PlaceData[]
  role         Role?       @relation(fields: [role_code], references: [role_code], map: "FK_user_role_code")
}

model BuildingType {
  building_id   BigInt      @id @default(autoincrement())
  name          String
  color         String
  active_status Boolean     @default(true)
  created_by    String?
  created_at    DateTime    @default(now())
  updated_by    String?
  updated_at    DateTime    @updatedAt
  label         String      @default("")
  build_code    Int?        @unique(map: "buildingtype_build_code_idx")
  PlaceData     PlaceData[]
}

model PlaceData {
  place_id           String        @id @default(uuid())
  place_name         String
  place_owner        String?
  place_address      String
  place_description  String?
  place_center_point Float[]
  map_id             String?       @unique
  user_id            String?
  created_by         String?
  created_at         DateTime      @default(now())
  updated_by         String?
  updated_at         DateTime      @updatedAt
  type_id            BigInt?
  place_map          PlaceMap?     @relation(fields: [map_id], references: [map_id], map: "FK_place_data_place_map")
  type               BuildingType? @relation(fields: [type_id], references: [building_id], map: "FK_place_data_type")
  user               User?         @relation(fields: [user_id], references: [user_id], map: "FK_place_data_user")
}

model PlaceMap {
  map_id        String     @id @default(uuid())
  place_geojson Json
  created_by    String?
  created_at    DateTime   @default(now())
  updated_by    String?
  updated_at    DateTime   @updatedAt
  place_data    PlaceData?
}
